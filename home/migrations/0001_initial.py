# Generated by Django 3.2.18 on 2024-02-29 14:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicTime',
            fields=[
                ('academic_time_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('academic_year_name', models.CharField(max_length=20)),
                ('academic_semester_name', models.CharField(max_length=20)),
                ('academic_year_int', models.IntegerField()),
                ('academic_semester_int', models.IntegerField()),
            ],
            options={
                'db_table': 'AcademicTime',
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('course_code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=70, null=True)),
                ('credit_hours', models.IntegerField(null=True)),
                ('level', models.IntegerField(null=True)),
                ('semester', models.CharField(max_length=10, null=True)),
            ],
            options={
                'db_table': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('doctor_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('doctor_name', models.CharField(max_length=200, null=True)),
                ('home', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Doctor',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('program_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('program_name', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'Program',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('student_name', models.CharField(max_length=200, null=True)),
                ('enroll_year', models.DateField(null=True)),
                ('graduate_year', models.DateField(null=True)),
                ('total_warnings_number', models.IntegerField(null=True)),
                ('supervisor_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervised_students', to=settings.AUTH_USER_MODEL)),
                ('home', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Student',
            },
        ),
        migrations.CreateModel(
            name='StudentHasSemester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cummulative_gpa', models.FloatField(null=True)),
                ('passed_hours', models.IntegerField(null=True)),
                ('hours_in_progress', models.IntegerField(null=True)),
                ('warnings_number', models.IntegerField(null=True)),
                ('level', models.IntegerField(null=True)),
                ('semester_gpa', models.FloatField(null=True)),
                ('rank', models.IntegerField(null=True)),
                ('academic_time', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.academictime')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.student')),
            ],
            options={
                'db_table': 'StudentHasSemester',
                'unique_together': {('student', 'academic_time')},
            },
        ),
        migrations.CreateModel(
            name='StudentHasProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_time', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.academictime')),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.program')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.student')),
            ],
            options={
                'db_table': 'StudentHasProgram',
                'unique_together': {('student', 'program', 'academic_time')},
            },
        ),
        migrations.CreateModel(
            name='StudentHasCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_category', models.CharField(max_length=30, null=True)),
                ('course_type', models.CharField(max_length=20, null=True)),
                ('grade', models.CharField(max_length=2, null=True)),
                ('oral', models.IntegerField(null=True)),
                ('practical', models.IntegerField(null=True)),
                ('total_marks', models.IntegerField(null=True)),
                ('year_work_marks', models.IntegerField(null=True)),
                ('final_marks', models.IntegerField(null=True)),
                ('academic_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.academictime')),
                ('course_code', models.ForeignKey(db_column='course_code', on_delete=django.db.models.deletion.CASCADE, to='home.courses')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.student')),
            ],
            options={
                'db_table': 'StudentHasCourses',
                'unique_together': {('student', 'course_code', 'academic_time')},
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('role_name', models.CharField(max_length=100, null=True)),
                ('is_decision_maker', models.BooleanField(null=True)),
                ('home', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Role',
            },
        ),
        migrations.CreateModel(
            name='ProgramHasCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mandatory_type', models.BooleanField(null=True)),
                ('course_code', models.ForeignKey(db_column='course_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='home.courses')),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.program')),
            ],
            options={
                'db_table': 'ProgramHasCourses',
                'unique_together': {('program', 'course_code')},
            },
        ),
        migrations.AddField(
            model_name='program',
            name='students',
            field=models.ManyToManyField(through='home.StudentHasProgram', to='home.Student'),
        ),
        migrations.CreateModel(
            name='DoctorTeachCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_time', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.academictime')),
                ('course_code', models.OneToOneField(db_column='course_code', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_teach_courses', to='home.courses')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.doctor')),
            ],
            options={
                'db_table': 'DoctorTeachCourses',
                'unique_together': {('doctor', 'course_code', 'academic_time')},
            },
        ),
        migrations.AddField(
            model_name='courses',
            name='doctors',
            field=models.ManyToManyField(through='home.DoctorTeachCourses', to='home.Doctor'),
        ),
        migrations.AddField(
            model_name='courses',
            name='programs',
            field=models.ManyToManyField(through='home.ProgramHasCourses', to='home.Program'),
        ),
        migrations.AddField(
            model_name='courses',
            name='students',
            field=models.ManyToManyField(through='home.StudentHasCourses', to='home.Student'),
        ),
        migrations.AddField(
            model_name='courses',
            name='supervised_program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program_supervise_courses', to='home.program'),
        ),
        migrations.AddField(
            model_name='academictime',
            name='students',
            field=models.ManyToManyField(through='home.StudentHasSemester', to='home.Student'),
        ),
    ]
